<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="edu.wofford.woclo.ArgumentParserTest" tests="61" skipped="0" failures="1" errors="0" timestamp="2021-12-06T18:48:20" hostname="Emilys-Air-4.wofford.int" time="0.577">
  <properties/>
  <testcase name="testWrongTypeExceptionInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.054"/>
  <testcase name="testPositionalNotAcceptedException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testArgumentNameNotSpecifiedException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testGetValueWantingAcceptedFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testAcceptedValues()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGetValueWantingAcceptedInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testShortNamedArguments()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testNotStackedAcceptedInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testNotStackedWrongTypeExceptionFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.004"/>
  <testcase name="testNotStackedNoValueException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNonPositionalFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testWrongTypeExceptionFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testWriteXMLJustPositionals()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.292"/>
  <testcase name="testXMLAllArgTypes()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.009"/>
  <testcase name="testNamedArgumentsNotGiven()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNamedArgsAllGiven()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGivenOtherThanFloatNamed()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testHelp()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testLongNameAcceptedValuesIntsException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testGetValueNamedInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testNotStackedAcceptedString()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testUnacceptedValuesPositional()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGetShortName()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testPositionalAcceptedStrings()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGetValueOptionalArgumentWrongValueInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNamedArgsAllGivenUnordered()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testNotStackedAcceptedFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testUnacceptedValuesNonPositional()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testNotStackedString()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testBooleanFlagsNotLast()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.01"/>
  <testcase name="testGetValueWantingInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testArgumentParserTwoArg()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testLongNameAcceptedValuesFloatsException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testGetArgument()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testWriteXMLJustNonPositionals()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.006">
    <failure message="java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at edu.wofford.woclo.XMLparser.toXML(XMLparser.java:254)
	at edu.wofford.woclo.ArgumentParserTest.testWriteXMLJustNonPositionals(ArgumentParserTest.java:978)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testBooleanFlags()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.004"/>
  <testcase name="testNumWordsNotExpected()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.021"/>
  <testcase name="testNotStackedWrongTypeExceptionAcceptedInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testStackedNotSpecifiedException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGetValueWantingFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testStackedNoValueException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testNotStackedWrongTypeExceptionAcceptedFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.003"/>
  <testcase name="testLongNameAcceptedValuesInts()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testWrongTypeExceptionAcceptedInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testGetValueOptionalArgumentWrongValueFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.003"/>
  <testcase name="testShortNameStacked()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNotStackedWrongTypeExceptionInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testWrongTypeExceptionExpectInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testXMLJustNonPositionals()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.008"/>
  <testcase name="testGetValueArgumentWrongValueFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testGetValueOptionalArgumentFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testWrongTypeExceptionAcceptedFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNoValueException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testLongNameAcceptedValuesFloats()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testArgumentParserNoArg()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testNotStackedNotSpecifiedException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.003"/>
  <testcase name="testNotStackedFloat()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.001"/>
  <testcase name="testNotStackedNotAcceptedException()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.006"/>
  <testcase name="testXmlJustPositionals()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <testcase name="testNumArgs()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.0"/>
  <testcase name="testGetValueArgumentWrongValueInt()" classname="edu.wofford.woclo.ArgumentParserTest" time="0.002"/>
  <system-out><![CDATA[1
pyramid
box
pyramid
ellipsoid
0
1
pyramid
box
pyramid
ellipsoid
0
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
